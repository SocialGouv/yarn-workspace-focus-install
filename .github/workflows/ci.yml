name: ci
on:
  - push
  - pull_request

jobs:
  build:
    strategy:
      # Don't fast-fail on tag and master
      fail-fast: ${{ github.event_name == 'pull_request' || (github.ref !=
        'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')) }}
      matrix:
        config:
          - os: ubuntu-latest
            node-version: 12.x
            kind: test
          - os: macOS-latest
            node-version: 12.x
            kind: test
          - os: windows-latest
            node-version: 12.x
            kind: test
          #
          - os: macOS-latest
            node-version: 14.x
            kind: test
          - os: windows-latest
            node-version: 14.x
            kind: test
          #
          - os: ubuntu-latest
            node-version: 14.x
            kind: release

    name: ${{ matrix.config.kind }} on ${{ matrix.config.node-version }} (${{ matrix.config.os }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Set up Node.js ${{ matrix.config.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.config.node-version }}

      - name: Get yarn cache directory path
        id: init
        shell: bash
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          #
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v2
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: ${{ matrix.config.os }}-${{ matrix.config.kind }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ matrix.config.os }}-${{ matrix.config.kind }}-

      - name: Installing
        run: yarn --frozen-lockfile --perfer-offline

      - name: Lint
        run: yarn lint

      - name: Unit tests
        if: matrix.config.kind == 'test'
        run: yarn test

      - name: Unit tests and coverage
        if: matrix.config.kind == 'release'
        run: yarn test --coverage --coverageReporters=lcov --coverageReporters=text-summary

      - name: Send test coverage to codecov
        if: matrix.config.kind == 'release'
        continue-on-error: true
        uses: codecov/codecov-action@v1

      - name: Build
        run: yarn build

      - name: Archive lib components
        if: matrix.config.kind == 'release'
        uses: actions/upload-artifact@v2
        with:
          name: lib
          path: lib/

      - name: Functional tests
        run: yarn e2e

  release:
    needs:
      - build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14.x

      - uses: actions/checkout@v2

      - name: Download lib form build job
        uses: actions/download-artifact@v2
        with:
          name: lib
          path: lib

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
        env:
          GIT_AUTHOR_EMAIL: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
          GIT_AUTHOR_NAME: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.SOCIALGROOVYBOT_NPM_TOKEN }}
